<?xml version="1.0"?>

<project name="GRR-SYNCHRONISATION" default="synchronisation" basedir=".">
  
  <!-- Fichier de configuration -->
  <property file="build.properties" /> 
 
  <!-- Options de compilation -->
  <property name="compile.debug" value="true" />
  <property name="compile.deprecation" value="true" />
  <property name="compile.optimize" value="true" />
  
  <!-- Propriétés de common crlr-->
  <property name="project.commun" value="./crlr-commons" />
  
  <!-- Chemin des librairies communes -->
  <property name="project.commun.lib" value="${project.commun}/lib" />
  <!-- Chemins Sources -->
  <property name="project.commun.src.dir" value="${project.commun}/src/main/java" />
  <property name="project.commun.src.report" value="${project.commun}/src/main/jasperreport" />
  <property name="project.commun.test.dir" value="${project.commun}/src/test/java" />
  <!-- Chemins Compilations -->
  <property name="project.commun.build" value="${project.commun}/build" />
  <property name="project.commun.build.main.dir" value="${project.commun.build}/classes" />
  <property name="project.commun.build.test.dir" value="${project.commun.build}/test" />
  <property name="project.common.out.jar" value="${project.commun}/jar" />
 
  <!-- Chemin junit -->
  <property name="junit_path" value="${project.commun.lib}/junit-3.8.2.jar"/>  
  
  <!-- projet.common -->  
  <mkdir dir="${project.commun.build}"/>
  <mkdir dir="${project.commun.build.main.dir}"/>
  <mkdir dir="${project.commun.build.test.dir}"/>   
  <mkdir dir="${project.common.out.jar}"/>
 
  <target name="info" description="Display configuration">
    <echo message="********************" />
    <echo message="*      Ant         *" />
    <echo message="********************" />
    <echo message="Ant  version          : ${ant.version}" />
    <echo message="Java version          : ${ant.java.version}" />
    <echo message="Java home directory   : ${java.home}" />
    <echo message="Java classpath  : ${java.class.path}" />
    <echo message="Java classpath  : ${project.commun.lib}" />
  </target>
 
  <target name="clean_commun" depends="info" description="Removes all generated files">
    <delete>
      <fileset dir="${project.commun.build}" includes="**/*.class" />
      <fileset dir="${project.common.out.jar}" includes="**/*.jar" />
    </delete>   
  </target>
 
  <!-- ClassPath -->
  <path id="compile_commun.classpath">
    <!-- Librairies locales -->
    <fileset dir="${project.commun.lib}" includes="**/*.jar" /> 
    <fileset dir="${project.common.out.jar}" includes="**/*.jar" />   
  </path>
 
  
  <target name="compile_common" depends="clean_commun">
    <javac srcdir="${project.commun.src.dir}" destdir="${project.commun.build.main.dir}" debug="on" >
      <classpath refid="compile_commun.classpath" />
    </javac>   
  </target>
  
  <!-- Build JAR files-->
  <target name="buildJar_common" depends="compile_common">
    <jar jarfile="${project.common.out.jar}/crlr-commons.jar" basedir="${project.commun.build.main.dir}" />   
  </target>
 
  <target name="compile_common_test" depends="buildJar_common">
    <javac srcdir="${project.commun.test.dir}" destdir="${project.commun.build.test.dir}" debug="on" >
      <classpath refid="compile_commun.classpath" />
    </javac>
    <copy todir="${project.commun.build.test.dir}">
      <fileset dir="${project.commun.test.dir}" includes="**/*.txt,**/*.properties" />
    </copy> 
  </target>

  <target name="common_test" depends="compile_common_test" description="Executer tests avec JUnit">
    <junit fork="yes" haltonerror="false" printsummary="on">
      <formatter type="plain" usefile="false" />
      <batchtest>
         <fileset dir="${project.commun.test.dir}">
           <include name="**/*Test.java"/>
         </fileset>
      </batchtest>
      <classpath>      
        <pathelement location="${junit_path}"/> 
        <pathelement location="${project.commun.build.main.dir}"/>
        <pathelement location="${project.commun.build.test.dir}"/>
        <pathelement location="${project.commun.lib}"/>
      </classpath>
    </junit>
  </target>
  
  <!-- Projet application -->  
  <!-- Propriétés de l'application -->
  <property name="project.application" value="./application" />
  <!-- Chemin des librairies de l'application -->
  <property name="project.application.lib" value="${project.application}/lib" />
 
  <!-- Chemins Sources -->
  <property name="project.application.src.dir" value="${project.application}/src/main/java" />
  <property name="project.application.src.dir.meta-inf" value="${project.application.src.dir}/META-INF" />

  <property name="project.application.test.dir" value="${project.application}/src/test/java" />
 
  <!-- Chemins Annexes -->
  <property name="project.application.properties" value="${project.application}/properties" />
 
  <!-- Chemins Compilations -->
  <property name="project.application.build" value="${project.application}/build" />
  <property name="project.application.build.test.dir" value="${project.application.build}/test" />
  <property name="project.application.build.web" value="${project.application.build}/WEB-INF" />
  <property name="project.application.build.main.dir" value="${project.application.build.web}/classes" /> 
  <property name="project.application.build.main.dir.meta-inf" value="${project.application.build.main.dir}/META-INF" />
  <property name="project.application.build.css" value="${project.application.build}/css" /> 
  <property name="project.application.build.ecrans" value="${project.application.build}/ecrans" />
  <property name="project.application.build.images" value="${project.application.build}/images" />
  <property name="project.application.build.js" value="${project.application.build}/js" />
  <property name="project.application.build.taglib" value="${project.application.build.web}/taglib" />
  <property name="project.application.build.conf" value="${project.application.build.web}/conf" />
  <property name="project.application.build.lib" value="${project.application.build.web}/lib" />
 
  <!-- Chemin distribution WAR -->
  <property name="project.dist" value="dist" />
 
  <!-- Properties de l'application -->
  <property file="${project.application.properties}/config.properties" />
 
  <!-- ClassPath -->
  <path id="compile_application.classpath"> 
    <!-- Librairies Tomcat -->
    <!--<fileset dir="${tomcat.home}/lib" includes="**/*.jar" />-->
    <!-- Librairies locales -->
    <fileset dir="${project.application.lib}" includes="**/*.jar" />
    <!-- Librairies communes -->
    <fileset dir="${project.commun.lib}" includes="**/*.jar" /> 
    <fileset dir="${project.common.out.jar}" includes="**/*.jar" />   
  </path> 

  <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${project.application.lib}/ant-contrib.jar"/>

  <!-- Target clean -->
  <target name="clean" description="Suppression des répertoires ${project.application.build}">
    <delete dir="${project.application.build}" />  
  </target>
 
  <!-- Target prepare -->
  <available file="CHANGELOG" type="file" property="changelogExists" />
  <target name="prepareCHANGELOG" unless="changelogExists">
    <echo message="Le fichier CHANGELOG contient l'historique des modifications de la Portlet" level="info" />
    <touch file="CHANGELOG" />
  </target>
 
  <target name="prepare" description="Preparation de l'environnement de travail" >
    <mkdir dir="${project.application.build.main.dir}" />
    <mkdir dir="${project.application.build.main.dir.meta-inf}" />  
    <mkdir dir="${project.application.src.dir}" />
    <mkdir dir="${project.application.properties}" />
    <mkdir dir="${project.application.lib}" />
    <mkdir dir="${project.dist}" />  
  
    <antcall target="prepareCHANGELOG" /> 
  </target>
 
  <!-- Target compile -->
  <target name="compile" description="Compilation" depends="prepare">
    <javac srcdir="${project.application.src.dir}" destdir="${project.application.build.main.dir}" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
      <classpath refid="compile_application.classpath" />
    </javac>
    <copy todir="${project.application.build.main.dir.meta-inf}" overwrite="true">
      <fileset dir="${project.application.src.dir.meta-inf}" />
    </copy>
  </target>
 
  <!-- Target init -->
  <target name="init" depends="compile">
    <!-- Copie des fichiers de configuration -->
    <copy todir="${project.application.build.main.dir}" overwrite="true">
      <fileset dir="${project.application.properties}" />
    </copy>
    <!-- Copie des librairies -->
    <copy todir="${project.application.build.lib}">
      <fileset dir="${project.application.lib}" />
      <fileset dir="${project.common.out.jar}" />
      <fileset dir="${project.commun.lib}" />
    </copy> 
  </target>

 
  
  <!-- Target synchronisation -->
  <target name="synchronisation" description="Synchronisation de la base de données de GRR avec l'annuaire LDAP." depends="buildJar_common,init">  
    <java classname="org.crlr.synchronisationGrr.Synchronisation" fork="yes">
      <classpath>     
        <pathelement path="${project.application.build.main.dir}"/>
        <!-- Librairies locales -->
        <fileset dir="${project.application.lib}" includes="**/*.jar" />
        <!-- Librairies communes -->
        <fileset dir="${project.commun.lib}" includes="**/*.jar" /> 
        <fileset dir="${project.common.out.jar}" includes="**/*.jar" />   
      </classpath>               
      <jvmarg line="-Duser.timezone=GMT"/>
    </java>
  </target>

    <target name="alimentation" description="Alimentation de la base de données de GRR avec l'annuaire LDAP." depends="buildJar_common,init">  
    <java classname="org.crlr.synchronisationGrr.Alimentation" fork="yes">
      <classpath>     
        <pathelement path="${project.application.build.main.dir}"/>
        <!-- Librairies locales -->
        <fileset dir="${project.application.lib}" includes="**/*.jar" />
        <!-- Librairies communes -->
        <fileset dir="${project.commun.lib}" includes="**/*.jar" /> 
        <fileset dir="${project.common.out.jar}" includes="**/*.jar" />   
      </classpath>               
      <jvmarg line="-Duser.timezone=GMT"/>
    </java>
  </target>
  
  <target name="migration" description="Migration des BDD GRR." depends="buildJar_common,init">  
    <java classname="org.crlr.synchronisationGrr.Migration" fork="yes">
      <classpath>     
        <pathelement path="${project.application.build.main.dir}"/>
        <!-- Librairies locales -->
        <fileset dir="${project.application.lib}" includes="**/*.jar" />
        <!-- Librairies communes -->
        <fileset dir="${project.commun.lib}" includes="**/*.jar" /> 
        <fileset dir="${project.common.out.jar}" includes="**/*.jar" />   
      </classpath>               
      <jvmarg line="-Duser.timezone=GMT"/>
    </java>
  </target>


  
 
</project>
